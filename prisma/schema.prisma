// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  role_id String @id @default(uuid())
  nama String? @db.VarChar(100)
  created_at DateTime @default(now())
  users User[]
}

model User {
  id String @id @default(uuid())
  nomor_identitas String @unique @db.VarChar(100)
  password String @db.VarChar(100)
  createdAt   DateTime      @default(now())
  role_id String
  role Role @relation(fields: [role_id], references: [role_id], onUpdate: Cascade, onDelete: Cascade)
  surat_keluar SuratKeluar[]
  surat_masuk SuratMasuk[]
}

model SuratKeluar {
  no_surat_keluar String @id
  tanggal_surat DateTime
  tempat_surat String @db.VarChar(100)
  lampiran String @db.VarChar(100)
  isi_surat String @db.VarChar(100)
  penerima String @db.VarChar(100)
  pengirim String @db.VarChar(100)
  jabatan_pengirim String @db.VarChar(100)
  gambar String 
  keterangan_gambar String @db.VarChar(100)
  user_id String
  kategori String
  sifat_surat String
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model SuratMasuk {
  no_surat_masuk String @id
  tanggal DateTime
  alamat String @db.VarChar(100)
  perihal String @db.VarChar(100)
  tujuan String
  organisasi String
  pengirim String
  penerima String
  sifat_surat String
  scan_surat String
  expired_data DateTime
  diteruskan_kepada String
  tanggal_penyelesaian String
  isi_disposisi String
  user_id String
  user User @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
}


